exit
c
ContactInfo.create!(:id => row["IdNo"], :address_type => row["Address Type"], :name => row["Name"], :address_one => row["Address1"], :address_two => row["Address2"], :address_three => row["Address3"], :area => row["Area"], :city => row["City"], :pincode => row["PINCode"], :phone => row["Phone"], :mobile_one => row["Mobile"], :mobile_two => row["Mobile 2"], :email => row["EMail"], :member_type => row["MemberType"], :committee_member => row["CommitteeMember"], :post => row["Post"], :admission_date => row["AdmissionDate"], :community_group_id => @cls )
@cls = CommunityGroup.find_by_name(row["Community Name"]).id
@cls.present?
row
c
CommunityGroup.find_by_name(row["Community Name"]).id
@cls.present?
exit
CommunityGroup.find_by_name(row["Community Group"])
@cls.present?
row
c
target_model = model_name.classify.constantize
model_name
exit
c
row["IDNo"].nil?
row
c
row["IDNo"].nil?
row["Id"].nil?
row
c
params
params[:dump]
params[:file]
params[:dump][:file]
params[:dump]
params[:dump][:file]
upload_content
c
 ContactInfo.upload_csv("ContactInfo", params[:dump][:file])
c
params
c
params
@contact_info = ContactInfo.find_by_phone(params[:phone])
c
params
c
params[:phone].present?
params
c
params[:phone]
params
c
params
params[:mobile]
c
params[:mobile]
params
c
ConctactInfo.all
  @contact_infos = ConctactInfo.all
